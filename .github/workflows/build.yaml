name: build

on:
  push:
    tags:
      - v*

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Use Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://npm.pkg.github.com'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/cache@v4
        id: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependency
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: pnpm install

      - uses: nrwl/nx-set-shas@v3
      # This line is needed for nx affected to work when CI is running on a PR
      - run: git branch --track main origin/main

      - name: Run build using docker
        run: pnpm nx run-many -t docker-build --parallel --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }} --build-arg VERSION=${{ github.ref_name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: fgigli
          password: ${{ secrets.NPM_TOKEN }}

      - name: Tag and push to docker registry
        run: |
          docker tag api ghcr.io/f-technology-srl/unic-api:${{ github.ref_name }}
          docker tag client ghcr.io/f-technology-srl/unic-client:${{ github.ref_name }}
          docker tag proxy ghcr.io/f-technology-srl/unic-proxy:${{ github.ref_name }}

          docker push ghcr.io/f-technology-srl/unic-api:${{ github.ref_name }}
          docker push ghcr.io/f-technology-srl/unic-client:${{ github.ref_name }}
          docker push ghcr.io/f-technology-srl/unic-proxy:${{ github.ref_name }}
